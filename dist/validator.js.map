{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 34f86137274805e4cdba","webpack:///./src/index.js","webpack:///./src/Validator.js","webpack:///./src/util.js","webpack:///./src/testHook.js","webpack:///./src/regex.js"],"names":["Validator","options","key","_default","prefix","errorEl","eventLevel","opts","form","bodyData","errors","fields","handles","addFields","formName","document","forms","setAttribute","onInputEvent","_onSubmit","evt","isSuccess","name","validateByName","preventSubmit","callback","field","el","_getArrayByName","isMultiSuccess","i","elLength","length","_validateField","preventDefault","returnValue","method","rules","fieldNames","Array","namesLength","level","validateFieldFunc","that","e","target","srcElement","ex","formEls","elements","formElsLength","oninput","onchange","noop","thatLevel","thisEl","window","ActiveXObject","onkeyup","thatOnSubmit","onsubmit","validate","undefined","errorObj","_updateField","isRequired","indexOf","isEmpty","value","split","ruleLength","parts","exec","param","apply","rule","message","seqText","messages","replace","clazz","placeId","id","_removeErrorPlace","_addErrorPlace","type","checked","elObj","arr","push","getElementById","parentNode","removeChild","createElement","innerText","errorPlacement","fieldEl","appendChild","getValue","extend","source","initField","parseToDate","thatDate","Date","dateArray","setFullYear","setMonth","setDate","isBrowser","getCurrentEvent","event","isRadioOrCheckbox","isSelect","elArray","tagName","isSameNameField","getElementsByName","attributeValue","attributeName","hasClass","cls","className","match","RegExp","addClass","classList","add","removeClass","reg","remove","testHook","isNumeric","numeric","test","isInteger","integer","isDecimal","decimal","isEmail","email","isIp","ip","isTel","tel","isPhone","phone","isAbc","abc","isUrl","url","isDate","date","year","parseInt","month","day","numDays","required","greaterThan","parseFloat","lessThan","maxLength","minLength","greaterThanDate","currentDate","paramDate","lessThanDate","regex"],"mappings":"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","file":"validator.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"validator\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"validator\"] = factory();\n\telse\n\t\troot[\"validator\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 34f86137274805e4cdba\n **/","import Validator from './Validator';\r\n\r\nexport default Validator;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import {\r\n  extend,\r\n  initField,\r\n  isBrowser,\r\n  getCurrentEvent,\r\n  isRadioOrCheckbox,\r\n  isSelect,\r\n  isSameNameField,\r\n  getElementsByName,\r\n  attributeValue,\r\n  addClass,\r\n  removeClass,\r\n} from './util';\r\nimport testHook from './testHook';\r\n\r\nexport default class Validator {\r\n\r\n  constructor(options) {\r\n    // 绑定验证方法\r\n    for (const key in testHook) {\r\n      this[key] = testHook[key];\r\n    }\r\n\r\n    // 无参数\r\n    if (!options) {\r\n      return this;\r\n    }\r\n\r\n    this._default = {\r\n      // css 类前缀\r\n      prefix: 'valid',\r\n      // 错误信息节点\r\n      errorEl: 'em',\r\n      // 表单触发事件级别\r\n      eventLevel: 'all',\r\n    };\r\n\r\n    // 替换默认参数\r\n    this.opts = extend(this._default, options);\r\n    this.form = {};\r\n    this.bodyData = options.bodyData;\r\n    this.errors = {};\r\n    this.fields = {};\r\n    this.handles = {};\r\n\r\n    // 构建具有所有需要验证的信息域\r\n    this.addFields(this.opts.fields);\r\n\r\n    // 有 form 表单的验证\r\n    if (isBrowser() && this.opts.formName) {\r\n      // 获取表单对象\r\n      this.form = document.forms[this.opts.formName];\r\n\r\n      // HTML5 添加 novalidate\r\n      this.form.setAttribute('novalidate', 'novalidate');\r\n\r\n      // 绑定用户输入事件\r\n      this.onInputEvent();\r\n\r\n      // 绑定提交事件\r\n      this._onSubmit();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 验证整体表单域\r\n   * @param  {Event} evt 当前事件\r\n   * @return {Boolean} 是否成功\r\n   */\r\n  validate(evt) {\r\n    this.handles.evt = getCurrentEvent(evt);\r\n    let isSuccess = true;\r\n    const fields = this.fields;\r\n\r\n    for (const name in fields) {\r\n      // 通过 name 验证\r\n      if (!this.validateByName(name)) {\r\n        isSuccess = false;\r\n      }\r\n    }\r\n\r\n    // 如果有错误，停止 submit 提交，并停止执行回调函数\r\n    if (!isSuccess) {\r\n      this.preventSubmit();\r\n    } else {\r\n      // 将 null 暴露到 callback 函数中\r\n      this.errors = null;\r\n    }\r\n\r\n    // 执行回调函数\r\n    if (typeof this.opts.callback === 'function') {\r\n      this.opts.callback(this.errors, this.handles.evt);\r\n    }\r\n\r\n    return isSuccess;\r\n  }\r\n\r\n  /**\r\n   * 验证单个表单域\r\n   * @param {String} name 属性\r\n   * @return {Boolean} 是否成功\r\n   */\r\n  validateByName(name) {\r\n    const field = this.fields[name];\r\n    let isSuccess = false;\r\n\r\n    // 单个验证没找到规则\r\n    if (!field) {\r\n      return isSuccess;\r\n    }\r\n\r\n    // 获取验证的 DOM 节点数组\r\n    const el = this._getArrayByName(field.name);\r\n\r\n    // 表单 name 属性相同且不是 radio、checkbox、select 的表单域\r\n    if (isSameNameField(el)) {\r\n      // 默认通过验证，若有一个错误，则不通过\r\n      let isMultiSuccess = true;\r\n      for (let i = 0, elLength = el.length; i < elLength; i++) {\r\n        // 当前验证的 field 对象\r\n        // 默认设置 el 为数组对象\r\n        field.el = [el[i]];\r\n        // 若有一个错误，则不通过\r\n        if (!this._validateField(field)) {\r\n          isMultiSuccess = false;\r\n        }\r\n      }\r\n      isSuccess = isMultiSuccess;\r\n    } else {\r\n      // 正常验证\r\n      field.el = el;\r\n      isSuccess = this._validateField(field);\r\n    }\r\n\r\n    return isSuccess;\r\n  }\r\n\r\n  /**\r\n   * 阻止表单提交\r\n   */\r\n  preventSubmit() {\r\n    const evt = this.handles.evt;\r\n\r\n    if (evt && evt.preventDefault) {\r\n      evt.preventDefault();\r\n    } else if (evt) {\r\n      // IE 使用的全局变量\r\n      evt.returnValue = false;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 扩展校验方法\r\n   * @param {String} name 校验名称\r\n   * @param {Function} method 校验方法\r\n   */\r\n  addMethod(name, method) {\r\n    if (typeof method === 'function') {\r\n      // 绑定验证方法\r\n      testHook[name] = method;\r\n\r\n      // 绑定至对象\r\n      this[name] = method;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 动态添加 fields 方法\r\n   * @param {Object} fields 对象\r\n   */\r\n  addFields(fields) {\r\n    if (typeof fields === 'object') {\r\n      // 构建具有所有需要验证的信息域\r\n      for (const name in fields) {\r\n        const field = fields[name];\r\n\r\n        // 规则正确，则进行\r\n        if (field.rules) {\r\n          // 初始化 其他属性\r\n          field.name = name;\r\n          initField(field);\r\n\r\n          // 构建单个需要验证的信息域\r\n          this.fields[name] = field;\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 动态移除 fields 方法\r\n   * @param {Array} fieldNames 名称\r\n   */\r\n  removeFields(fieldNames) {\r\n    if (fieldNames instanceof Array) {\r\n      for (let i = 0, namesLength = fieldNames.length; i < namesLength; i++) {\r\n        // 移除对象\r\n        this.fields && delete this.fields[fieldNames[i]];\r\n        this.errors && delete this.errors[fieldNames[i]];\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 绑定用户输入事件和改变事件\r\n   * @param {String} name 属性\r\n   * @param {String} level 事件级别 off/change/all\r\n   */\r\n  onInputEvent(name, level) {\r\n    const validateFieldFunc = (function (that) {\r\n      return function (e) {\r\n        try {\r\n          const evt = getCurrentEvent(e);\r\n          const el = evt.target || evt.srcElement;\r\n          const field = that.fields[el.name];\r\n\r\n          // 设置触发事件的表单元素\r\n          field.el = that._getArrayByName(field.name);\r\n          // 验证单个表单\r\n          return that._validateField(field);\r\n        } catch (ex) {\r\n          return null;\r\n        }\r\n      };\r\n    }(this));\r\n\r\n    // 绑定表单值改变拦截\r\n    const formEls = name ? this._getArrayByName(name) : this.form.elements;\r\n\r\n    for (let i = 0, formElsLength = formEls.length; i < formElsLength; i++) {\r\n      let oninput;\r\n      let onchange;\r\n      const noop = function () {};\r\n      const thatLevel = level || this.opts.eventLevel;\r\n      // 触发事件绑定\r\n      switch (thatLevel) {\r\n        case 'off':\r\n          oninput = noop;\r\n          onchange = noop;\r\n          break;\r\n        case 'change':\r\n          oninput = noop;\r\n          onchange = validateFieldFunc;\r\n          break;\r\n        case 'all':\r\n          oninput = validateFieldFunc;\r\n          onchange = validateFieldFunc;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      // 针对 IE 浏览器使用 onkeyup 事件\r\n      const thisEl = formEls[i];\r\n      if (!!window.ActiveXObject || 'ActiveXObject' in window) {\r\n        thisEl.onkeyup = oninput;\r\n      } else {\r\n        thisEl.oninput = oninput;\r\n      }\r\n      thisEl.onchange = onchange;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 绑定 submit 按钮提交事件\r\n   */\r\n  _onSubmit() {\r\n    const thatOnSubmit = this.form.onsubmit;\r\n    this.form.onsubmit = (function (that) {\r\n      return function (e) {\r\n        try {\r\n          const evt = getCurrentEvent(e);\r\n          return that.validate(evt) && (thatOnSubmit === undefined || thatOnSubmit());\r\n        } catch (ex) {\r\n          return null;\r\n        }\r\n      };\r\n    }(this));\r\n  }\r\n\r\n  /**\r\n   * 验证当前节点\r\n   * @param  {Object} field 验证信息域\r\n   * @return {Boolean} 是否成功\r\n   */\r\n  _validateField(field) {\r\n    // 成功标识\r\n    let isSuccess = true;\r\n    // 错误对象\r\n    this.errors = this.errors || {};\r\n    let errorObj = this.errors[field.name];\r\n\r\n    // 更新验证域\r\n    this._updateField(field);\r\n\r\n    const isRequired = field.rules.indexOf('required') !== -1;\r\n    const isEmpty = field.value === undefined || field.value === '' || field.value === null;\r\n\r\n    const rules = field.rules.split(/\\s*\\|\\s*/g);\r\n\r\n    for (let i = 0, ruleLength = rules.length; i < ruleLength; i++) {\r\n      // 逐条验证，如果已经验证失败，则暂时不需要进入当前条目再次验证\r\n      if (!isSuccess) {\r\n        break;\r\n      }\r\n\r\n      // 转换：max_length(12) => ['max_length', 12]\r\n      let method = rules[i];\r\n      const parts = /^(.+?)\\((.+)\\)$/.exec(method);\r\n      let param = '';\r\n\r\n      // 解析带参数的验证如 max_length(12)\r\n      if (parts) {\r\n        method = parts[1];\r\n        param = parts[2];\r\n      }\r\n\r\n      // 如果不是 required 这个字段，该值是空的，则不验证，继续下一个规则。\r\n      if (!isRequired && isEmpty) {\r\n        continue;\r\n      }\r\n\r\n      // 匹配验证\r\n      if (typeof testHook[method] === 'function') {\r\n        if (!testHook[method].apply(this, [field, param])) {\r\n          isSuccess = false;\r\n        }\r\n      }\r\n\r\n      // 错误信息域\r\n      this.errors[field.name] = {\r\n        el: field.el,\r\n        name: field.name,\r\n        rule: method,\r\n      };\r\n\r\n      // 解析错误信息\r\n      if (!isSuccess) {\r\n        // 错误提示\r\n        this.errors[field.name].message = (function message() {\r\n          const seqText = field.messages ? field.messages.split(/\\s*\\|\\s*/g)[i] : '';\r\n\r\n          // 替换 {{value}} 和 {{param}} 为指定值\r\n          return seqText ? seqText.replace(/\\{\\{\\s*value\\s*\\}\\}/g, field.value).replace(/\\{\\{\\s*param\\s*\\}\\}/g, param) : seqText;\r\n        }());\r\n      }\r\n      errorObj = this.errors[field.name];\r\n    }\r\n\r\n    // 验证成功后，删除之前验证过的信息\r\n    if (isSuccess) {\r\n      delete this.errors[field.name];\r\n    }\r\n\r\n    // 节点不存在，直接返回结果\r\n    if (!field.el) {\r\n      return isSuccess;\r\n    }\r\n\r\n    // 错误信息操作\r\n    if (errorObj) {\r\n      // 添加错误类信息\r\n      const clazz = `${this.opts.prefix}-error`;\r\n      errorObj.clazz = clazz;\r\n      // 设置错误 id\r\n      errorObj.placeId = (`${clazz}_${field.id || field.name}`).replace('-', '_');\r\n\r\n      // 当前条目验证结果展示\r\n      if (isSuccess) {\r\n        this._removeErrorPlace(errorObj);\r\n      } else {\r\n        this._addErrorPlace(errorObj);\r\n      }\r\n    }\r\n\r\n    return isSuccess;\r\n  }\r\n\r\n  /**\r\n   * 更新单个验证域\r\n   * field.el 统一为 Array 对象\r\n   * @param {Object} field 验证域\r\n   */\r\n  _updateField(field) {\r\n    // 数据验证模式\r\n    if (this.bodyData) {\r\n      field.value = this.bodyData[field.name];\r\n      return;\r\n    }\r\n\r\n    // 设置验证信息域属性\r\n    const el = field.el;\r\n    if (el) {\r\n      field.id = el[0].id;\r\n      field.type = el[0].type;\r\n      field.value = attributeValue(el, 'value');\r\n      field.checked = attributeValue(el, 'checked');\r\n    } else {\r\n      // 动态删除表单域之后清空对象值\r\n      initField(field);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取 nodeList 转换为 Array 统一验证，并避免 IE 序列化崩溃 BUG\r\n   * @param {String} name 节点\r\n   */\r\n  _getArrayByName(name) {\r\n    // 仅浏览器环境\r\n    if (isBrowser()) {\r\n      let elObj;\r\n\r\n      // 若有 form 存在定位更精确\r\n      if (this.opts.formName) {\r\n        elObj = this.form[name];\r\n      } else {\r\n        elObj = getElementsByName(name);\r\n      }\r\n\r\n      // 如果节点对象不存在或长度为零\r\n      if (!elObj || elObj.length === 0) {\r\n        return null;\r\n      }\r\n\r\n      // 将节点转换为数组\r\n      const arr = [];\r\n      const elLength = elObj.length;\r\n\r\n      // 排除 select， select 为数组形式\r\n      if (elLength && !isSelect(elObj)) {\r\n        for (let i = 0; i < elLength; i++) {\r\n          arr.push(elObj[i]);\r\n        }\r\n      } else {\r\n        arr.push(elObj);\r\n      }\r\n      return arr;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 移除当前条目错误信息\r\n   * @param {Object} errorObj 验证信息域\r\n   */\r\n  _removeErrorPlace(errorObj) {\r\n    if (!errorObj.el) {\r\n      return;\r\n    }\r\n\r\n    // 移除表单域错误类\r\n    for (let i = 0, elLength = errorObj.el.length; i < elLength; i++) {\r\n      removeClass(errorObj.el[i], errorObj.clazz);\r\n      addClass(errorObj.el[i], `${this.opts.prefix}-success`);\r\n    }\r\n\r\n    // 移除错误信息节点\r\n    const errorEl = document.getElementById(errorObj.placeId);\r\n    errorEl && errorEl.parentNode.removeChild(errorEl);\r\n  }\r\n\r\n  /**\r\n   * 添加当前条目错误信息\r\n   * @param {Object} errorObj 验证信息域\r\n   */\r\n  _addErrorPlace(errorObj) {\r\n    if (!errorObj.el) {\r\n      return;\r\n    }\r\n\r\n    // 清除之前保留的错误信息\r\n    this._removeErrorPlace(errorObj);\r\n\r\n    const opts = this.opts;\r\n\r\n    // 当前表单域添加错误类\r\n    for (let i = 0, elLength = errorObj.el.length; i < elLength; i++) {\r\n      removeClass(errorObj.el[i], `${opts.prefix}-success`);\r\n      addClass(errorObj.el[i], errorObj.clazz);\r\n    }\r\n\r\n    // 创建元素\r\n    const errorEl = document.createElement(opts.errorEl);\r\n    addClass(errorEl, `${errorObj.clazz}-message`);\r\n    errorEl.setAttribute('id', errorObj.placeId);\r\n    errorEl.innerText = errorObj.message;\r\n\r\n    // 错误信息位置\r\n    if (typeof opts.errorPlacement === 'function') {\r\n      // 参数：错误信息节点，当前表单节点\r\n      opts.errorPlacement(errorEl, errorObj.el[0]);\r\n    } else {\r\n      // 默认错误信息位置\r\n      // label 、 radio 元素错误位置不固定，默认暂不设置\r\n      const fieldEl = errorObj.el[0];\r\n      if (!isRadioOrCheckbox(fieldEl)) {\r\n        fieldEl.parentNode.appendChild(errorEl);\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Validator.js\n **/","/**\r\n * 判断 field 是否为字符串\r\n * @param {Object} field 验证域\r\n * @return {String} 返回值\r\n */\r\nfunction getValue(field) {\r\n  return (typeof field === 'string') ? field : field.value;\r\n}\r\n\r\n/**\r\n * 对象继承\r\n * @param {Object} target\r\n * @param {Object} source\r\n * @return {Object} target\r\n */\r\nfunction extend(target, source) {\r\n  for (const key in source) {\r\n    target[key] = source[key];\r\n  }\r\n  return target;\r\n}\r\n\r\n/**\r\n * 设置除主属性的验证域为默认值\r\n * @param field\r\n */\r\nfunction initField(field) {\r\n  field.id = null;\r\n  field.el = null;\r\n  field.type = null;\r\n  field.value = null;\r\n  field.checked = null;\r\n}\r\n\r\n/**\r\n * 转换为日期\r\n * @param {String} param 日期格式：yyyy-MM-dd\r\n * @return {Date}\r\n */\r\nfunction parseToDate(param) {\r\n  const thatDate = new Date();\r\n  const dateArray = param.split('-');\r\n\r\n  thatDate.setFullYear(dateArray[0]);\r\n  thatDate.setMonth(dateArray[1] - 1);\r\n  thatDate.setDate(dateArray[2]);\r\n  return thatDate;\r\n}\r\n\r\n/**\r\n * 是否为浏览器环境\r\n * @return {Boolean}\r\n */\r\nfunction isBrowser() {\r\n  return typeof window !== 'undefined';\r\n}\r\n\r\n/**\r\n * 获取当前事件，兼容火狐浏览器\r\n * @param {Event} evt\r\n * @return {Event}\r\n */\r\nfunction getCurrentEvent(evt) {\r\n  return isBrowser() ? (evt || window.event) : null;\r\n}\r\n\r\n/**\r\n * 判断节点是否为 radio 或者 checkbox\r\n * @param el 传入节点\r\n * @return {Boolean}\r\n */\r\nfunction isRadioOrCheckbox(el) {\r\n  return el.type === 'radio' || el.type === 'checkbox';\r\n}\r\n\r\n/**\r\n * 判断节点是否为 select\r\n * @param {Element} elArray 传入节点\r\n * @return {Boolean}\r\n */\r\nfunction isSelect(elArray) {\r\n  return elArray[0].tagName === 'OPTION';\r\n}\r\n\r\n/**\r\n * 表单 name 属性相同且不是 radio 或 checkbox 的表单域\r\n * @param elArray 传入节点\r\n * @return {Boolean}\r\n */\r\nfunction isSameNameField(elArray) {\r\n  return elArray && elArray.length && !isRadioOrCheckbox(elArray[0]) && !isSelect(elArray);\r\n}\r\n\r\n/**\r\n * 通过 name 获取节点集合\r\n * @param {String} name 属性\r\n */\r\nfunction getElementsByName(name) {\r\n  return document.getElementsByName(name);\r\n}\r\n\r\n/**\r\n * 获取节点对象的属性\r\n * @param {Object} elArray 传入节点\r\n * @param {String} attributeName 需要获取的属性\r\n * @return {String} 属性值\r\n */\r\nfunction attributeValue(elArray, attributeName) {\r\n  if (isRadioOrCheckbox(elArray[0])) {\r\n    for (let i = 0, elLength = elArray.length; i < elLength; i++) {\r\n      if (elArray[i].checked) {\r\n        return elArray[i][attributeName];\r\n      }\r\n    }\r\n  }\r\n  return elArray[0][attributeName];\r\n}\r\n\r\n/**\r\n * 判断是否包含 class\r\n * @param {Element} el\r\n * @param {String} cls 类名\r\n */\r\nfunction hasClass(el, cls) {\r\n  return el.className.match(new RegExp(`(\\\\s|^)${cls}(\\\\s|$)`));\r\n}\r\n\r\n/**\r\n * 添加 class\r\n * @param {Element} el\r\n * @param {String} cls 类名\r\n */\r\nfunction addClass(el, cls) {\r\n  if (!hasClass(el, cls)) {\r\n    el.classList ? el.classList.add(cls) : el.className += ` ${cls}`;\r\n  }\r\n}\r\n\r\n/**\r\n * 移除 class\r\n * @param {Element} el\r\n * @param {String} cls 类名\r\n */\r\nfunction removeClass(el, cls) {\r\n  if (hasClass(el, cls)) {\r\n    const reg = new RegExp(`(\\\\s|^)${cls}(\\\\s|$)`);\r\n    el.classList ? el.classList.remove(cls) : el.className = el.className.replace(reg, ' ');\r\n  }\r\n}\r\n\r\nexport {\r\n  getValue,\r\n  extend,\r\n  initField,\r\n  parseToDate,\r\n  isBrowser,\r\n  getCurrentEvent,\r\n  isRadioOrCheckbox,\r\n  isSelect,\r\n  isSameNameField,\r\n  getElementsByName,\r\n  attributeValue,\r\n  addClass,\r\n  removeClass,\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util.js\n **/","import regex from './regex';\r\nimport {\r\n  getValue,\r\n  parseToDate,\r\n  isRadioOrCheckbox,\r\n} from './util';\r\n\r\n/**\r\n * 验证方法类\r\n */\r\nconst testHook = {\r\n\r\n  // 验证自然数\r\n  isNumeric(field) {\r\n    return regex.numeric.test(getValue(field));\r\n  },\r\n\r\n  // 验证整数\r\n  isInteger(field) {\r\n    return regex.integer.test(getValue(field));\r\n  },\r\n\r\n  // 验证浮点数\r\n  isDecimal(field) {\r\n    return regex.decimal.test(getValue(field));\r\n  },\r\n\r\n  // 验证邮箱\r\n  isEmail(field) {\r\n    return regex.email.test(getValue(field));\r\n  },\r\n\r\n  // 验证 IP 地址\r\n  isIp(field) {\r\n    return regex.ip.test(getValue(field));\r\n  },\r\n\r\n  // 验证座机\r\n  isTel(field) {\r\n    return regex.tel.test(getValue(field));\r\n  },\r\n\r\n  // 验证手机\r\n  isPhone(field) {\r\n    return regex.phone.test(getValue(field));\r\n  },\r\n\r\n  // 验证字母数字下划线\r\n  isAbc(field) {\r\n    return regex.abc.test(getValue(field));\r\n  },\r\n\r\n  // 验证URL\r\n  isUrl(field) {\r\n    return regex.url.test(getValue(field));\r\n  },\r\n\r\n  // 验证日期\r\n  isDate(field) {\r\n    // 解析日期\r\n    let thatDate = getValue(field);\r\n    if (regex.date.test(thatDate)) {\r\n      thatDate = thatDate.split('-');\r\n      const year = parseInt(thatDate[0], 10);\r\n      const month = parseInt(thatDate[1], 10);\r\n      const day = parseInt(thatDate[2], 10);\r\n\r\n      if (year < 1 || year > 9999 || month < 1 || month > 12) {\r\n        return false;\r\n      }\r\n\r\n      const numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n      // 闰年2月29号\r\n      if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0)) {\r\n        numDays[1] = 29;\r\n      }\r\n\r\n      // 检查日期\r\n      return !(day < 1 || day > numDays[month - 1]);\r\n    }\r\n    return false;\r\n  },\r\n\r\n  // 是否为必填\r\n  required(field) {\r\n    if (isRadioOrCheckbox(field)) {\r\n      return (field.checked === true);\r\n    }\r\n    return (getValue(field) !== null && getValue(field) !== '');\r\n  },\r\n\r\n  // 多于 某个数\r\n  greaterThan(field, param) {\r\n    const value = getValue(field);\r\n    if (!regex.decimal.test(value)) {\r\n      return false;\r\n    }\r\n    return (parseFloat(value) > parseFloat(param));\r\n  },\r\n\r\n  // 少于 某个数\r\n  lessThan(field, param) {\r\n    const value = getValue(field);\r\n    if (!regex.decimal.test(value)) {\r\n      return false;\r\n    }\r\n    return (parseFloat(value) < parseFloat(param));\r\n  },\r\n\r\n  // 最大长度\r\n  maxLength(field, length) {\r\n    if (!regex.integer.test(length)) {\r\n      return false;\r\n    }\r\n    return (getValue(field).length <= parseInt(length, 10));\r\n  },\r\n\r\n  // 最小长度\r\n  minLength(field, length) {\r\n    if (!regex.integer.test(length)) {\r\n      return false;\r\n    }\r\n    return (getValue(field).length >= parseInt(length, 10));\r\n  },\r\n\r\n  // 大于某个日期\r\n  greaterThanDate(field, date) {\r\n    const currentDate = parseToDate(getValue(field));\r\n    const paramDate = parseToDate(date);\r\n\r\n    if (!paramDate || !currentDate) {\r\n      return false;\r\n    }\r\n    return currentDate > paramDate;\r\n  },\r\n\r\n  // 小于某个日期\r\n  lessThanDate(field, date) {\r\n    const currentDate = parseToDate(getValue(field));\r\n    const paramDate = parseToDate(date);\r\n\r\n    if (!paramDate || !currentDate) {\r\n      return false;\r\n    }\r\n    return currentDate < paramDate;\r\n  },\r\n\r\n};\r\n\r\nexport default testHook;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/testHook.js\n **/","/**\r\n * 正则表达式\r\n */\r\nconst regex = {\r\n\r\n  // 自然数\r\n  numeric: /^\\d+$/,\r\n\r\n  // 整数\r\n  integer: /^-?\\d+$/,\r\n\r\n  // 浮点数\r\n  decimal: /^-?\\d*\\.?\\d+$/,\r\n\r\n  // 邮箱\r\n  email: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n\r\n  // IP 地址 [ip ipv4、ipv6]\r\n  ip: /^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])((\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])){3}|(\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])){5})$/,\r\n\r\n  // 电话号码\r\n  tel: /^(([0+]\\d{2,3}-)?(0\\d{2,3})-)(\\d{7,8})(-(\\d{3,}))?$/,\r\n\r\n  // 手机号码\r\n  phone: /^1[3-9]\\d{9}$/,\r\n\r\n  // 字母数字或下划线\r\n  abc: /^\\w+$/,\r\n\r\n  // URL\r\n  url: /[a-zA-Z]+:\\/\\/[^\\s]*/,\r\n\r\n  // 日期\r\n  date: /^\\d{4}-\\d{1,2}-\\d{1,2}$/,\r\n};\r\n\r\nexport default regex;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/regex.js\n **/"],"sourceRoot":""}