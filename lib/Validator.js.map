{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ed356d30e84b563b615b","webpack:///./src/index.js","webpack:///./src/Validator.js","webpack:///./src/util.js","webpack:///./src/Validate.js","webpack:///./src/testHook.js","webpack:///./src/regex.js"],"names":["Validator","isSuccess","errors","clazz","opts","prefix","placeId","id","name","replace","_removeErrorPlace","_addErrorPlace","level","validateFieldFunc","that","e","evt","el","target","srcElement","field","fields","_getArrayByName","_validateField","ex","formEls","form","elements","i","formElsLength","length","oninput","onchange","noop","thatLevel","eventLevel","thisEl","window","ActiveXObject","onkeyup","errorObj","elLength","errorEl","document","getElementById","parentNode","removeChild","createElement","setAttribute","innerText","message","errorPlacement","fieldEl","appendChild","getValue","value","extend","source","key","initField","type","checked","parseToDate","param","thatDate","Date","dateArray","split","setFullYear","setMonth","setDate","isBrowser","getCurrentEvent","event","isRadioOrCheckbox","isSelect","elArray","tagName","isSameNameField","getElementsByName","attributeValue","attributeName","hasClass","cls","className","match","RegExp","addClass","classList","add","removeClass","reg","remove","Validate","options","_default","bodyData","handles","addFields","formName","forms","onInputEvent","_onSubmit","validateByName","preventSubmit","callback","isMultiSuccess","preventDefault","returnValue","method","rules","fieldNames","Array","namesLength","thatOnSubmit","onsubmit","validate","undefined","thatField","_updateField","isRequired","indexOf","isEmpty","ruleLength","parts","exec","apply","rule","seqText","messages","afterFieldValidate","elObj","arr","push","testHook","isNumeric","numeric","test","isInteger","integer","isDecimal","decimal","isEmail","email","isIp","ip","isTel","tel","isPhone","phone","isAbc","abc","isUrl","url","isDate","date","year","parseInt","month","day","numDays","required","greaterThan","parseFloat","lessThan","maxLength","minLength","greaterThanDate","currentDate","paramDate","lessThanDate","regex"],"mappings":"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","file":"Validator.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Validator\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Validator\"] = factory();\n\telse\n\t\troot[\"Validator\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ed356d30e84b563b615b\n **/","import Validator from './Validator';\r\n\r\nexport default Validator;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import {\r\n  getCurrentEvent,\r\n  isRadioOrCheckbox,\r\n  addClass,\r\n  removeClass,\r\n} from './util';\r\nimport Validate from './Validate';\r\n\r\n/**\r\n * validator 组件\r\n */\r\nexport default class Validator extends Validate {\r\n\r\n  /**\r\n   * Field 验证之后处理\r\n   * @param isSuccess\r\n   * @param errors\r\n   */\r\n  afterFieldValidate(isSuccess, errors) {\r\n    // 错误信息操作\r\n    if (errors) {\r\n      // 添加错误类信息\r\n      const clazz = `${this.opts.prefix}-error`;\r\n      errors.clazz = clazz;\r\n      // 设置错误 id\r\n      errors.placeId = (`${clazz}_${errors.id || errors.name}`).replace('-', '_');\r\n\r\n      // 当前条目验证结果展示\r\n      if (isSuccess) {\r\n        this._removeErrorPlace(errors);\r\n      } else {\r\n        this._addErrorPlace(errors);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绑定用户输入事件和改变事件\r\n   * @param {String} name 属性\r\n   * @param {String} level 事件级别 off/change/all\r\n   */\r\n  onInputEvent(name, level) {\r\n    const validateFieldFunc = (function (that) {\r\n      return function (e) {\r\n        try {\r\n          const evt = getCurrentEvent(e);\r\n          const el = evt.target || evt.srcElement;\r\n          const field = that.fields[el.name];\r\n\r\n          // 设置触发事件的表单元素\r\n          field.el = that._getArrayByName(field.name);\r\n          // 验证单个表单\r\n          return that._validateField(field);\r\n        } catch (ex) {\r\n          return null;\r\n        }\r\n      };\r\n    }(this));\r\n\r\n    // 绑定表单值改变拦截\r\n    const formEls = name ? this._getArrayByName(name) : this.form.elements;\r\n\r\n    for (let i = 0, formElsLength = formEls.length; i < formElsLength; i++) {\r\n      let oninput;\r\n      let onchange;\r\n      const noop = function () {};\r\n      const thatLevel = level || this.opts.eventLevel;\r\n      // 触发事件绑定\r\n      switch (thatLevel) {\r\n        case 'off':\r\n          oninput = noop;\r\n          onchange = noop;\r\n          break;\r\n        case 'change':\r\n          oninput = noop;\r\n          onchange = validateFieldFunc;\r\n          break;\r\n        case 'all':\r\n          oninput = validateFieldFunc;\r\n          onchange = validateFieldFunc;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      // 针对 IE 浏览器使用 onkeyup 事件\r\n      const thisEl = formEls[i];\r\n      if (!!window.ActiveXObject || 'ActiveXObject' in window) {\r\n        thisEl.onkeyup = oninput;\r\n      } else {\r\n        thisEl.oninput = oninput;\r\n      }\r\n      thisEl.onchange = onchange;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 移除当前条目错误信息\r\n   * @param {Object} errorObj 验证信息域\r\n   */\r\n  _removeErrorPlace(errorObj) {\r\n    if (!errorObj.el) {\r\n      return;\r\n    }\r\n\r\n    // 移除表单域错误类\r\n    for (let i = 0, elLength = errorObj.el.length; i < elLength; i++) {\r\n      removeClass(errorObj.el[i], errorObj.clazz);\r\n      addClass(errorObj.el[i], `${this.opts.prefix}-success`);\r\n    }\r\n\r\n    // 移除错误信息节点\r\n    const errorEl = document.getElementById(errorObj.placeId);\r\n    errorEl && errorEl.parentNode.removeChild(errorEl);\r\n  }\r\n\r\n  /**\r\n   * 添加当前条目错误信息\r\n   * @param {Object} errorObj 验证信息域\r\n   */\r\n  _addErrorPlace(errorObj) {\r\n    if (!errorObj.el) {\r\n      return;\r\n    }\r\n\r\n    // 清除之前保留的错误信息\r\n    this._removeErrorPlace(errorObj);\r\n\r\n    const opts = this.opts;\r\n\r\n    // 当前表单域添加错误类\r\n    for (let i = 0, elLength = errorObj.el.length; i < elLength; i++) {\r\n      removeClass(errorObj.el[i], `${opts.prefix}-success`);\r\n      addClass(errorObj.el[i], errorObj.clazz);\r\n    }\r\n\r\n    // 创建元素\r\n    const errorEl = document.createElement(opts.errorEl);\r\n    addClass(errorEl, `${errorObj.clazz}-message`);\r\n    errorEl.setAttribute('id', errorObj.placeId);\r\n    errorEl.innerText = errorObj.message;\r\n\r\n    // 错误信息位置\r\n    if (typeof opts.errorPlacement === 'function') {\r\n      // 参数：错误信息节点，当前表单节点\r\n      opts.errorPlacement(errorEl, errorObj.el[0]);\r\n    } else {\r\n      // 默认错误信息位置\r\n      // label 、 radio 元素错误位置不固定，默认暂不设置\r\n      const fieldEl = errorObj.el[0];\r\n      if (!isRadioOrCheckbox(fieldEl)) {\r\n        fieldEl.parentNode.appendChild(errorEl);\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Validator.js\n **/","/**\r\n * 判断 field 是否为字符串\r\n * @param {Object} field 验证域\r\n * @return {String} 返回值\r\n */\r\nfunction getValue(field) {\r\n  return (typeof field === 'string') ? field : field.value;\r\n}\r\n\r\n/**\r\n * 对象继承\r\n * @param {Object} target\r\n * @param {Object} source\r\n * @return {Object} target\r\n */\r\nfunction extend(target, source) {\r\n  for (const key in source) {\r\n    target[key] = source[key];\r\n  }\r\n  return target;\r\n}\r\n\r\n/**\r\n * 设置除主属性的验证域为默认值\r\n * @param field\r\n * @return field\r\n */\r\nfunction initField(field) {\r\n  field.id = null;\r\n  field.el = null;\r\n  field.type = null;\r\n  field.value = null;\r\n  field.checked = null;\r\n  return field;\r\n}\r\n\r\n/**\r\n * 转换为日期\r\n * @param {String} param 日期格式：yyyy-MM-dd\r\n * @return {Date}\r\n */\r\nfunction parseToDate(param) {\r\n  const thatDate = new Date();\r\n  const dateArray = param.split('-');\r\n\r\n  thatDate.setFullYear(dateArray[0]);\r\n  thatDate.setMonth(dateArray[1] - 1);\r\n  thatDate.setDate(dateArray[2]);\r\n  return thatDate;\r\n}\r\n\r\n/**\r\n * 是否为浏览器环境\r\n * @return {Boolean}\r\n */\r\nfunction isBrowser() {\r\n  return typeof window !== 'undefined';\r\n}\r\n\r\n/**\r\n * 获取当前事件，兼容火狐浏览器\r\n * @param {Event} evt\r\n * @return {Event}\r\n */\r\nfunction getCurrentEvent(evt) {\r\n  return isBrowser() ? (evt || window.event) : null;\r\n}\r\n\r\n/**\r\n * 判断节点是否为 radio 或者 checkbox\r\n * @param el 传入节点\r\n * @return {Boolean}\r\n */\r\nfunction isRadioOrCheckbox(el) {\r\n  return el.type === 'radio' || el.type === 'checkbox';\r\n}\r\n\r\n/**\r\n * 判断节点是否为 select\r\n * @param {Element} elArray 传入节点\r\n * @return {Boolean}\r\n */\r\nfunction isSelect(elArray) {\r\n  return elArray[0].tagName === 'OPTION';\r\n}\r\n\r\n/**\r\n * 表单 name 属性相同且不是 radio 或 checkbox 的表单域\r\n * @param elArray 传入节点\r\n * @return {Boolean}\r\n */\r\nfunction isSameNameField(elArray) {\r\n  return elArray && elArray.length && !isRadioOrCheckbox(elArray[0]) && !isSelect(elArray);\r\n}\r\n\r\n/**\r\n * 通过 name 获取节点集合\r\n * @param {String} name 属性\r\n */\r\nfunction getElementsByName(name) {\r\n  return document.getElementsByName(name);\r\n}\r\n\r\n/**\r\n * 获取节点对象的属性\r\n * @param {Object} elArray 传入节点\r\n * @param {String} attributeName 需要获取的属性\r\n * @return {String} 属性值\r\n */\r\nfunction attributeValue(elArray, attributeName) {\r\n  if (isRadioOrCheckbox(elArray[0])) {\r\n    for (let i = 0, elLength = elArray.length; i < elLength; i++) {\r\n      if (elArray[i].checked) {\r\n        return elArray[i][attributeName];\r\n      }\r\n    }\r\n  }\r\n  return elArray[0][attributeName];\r\n}\r\n\r\n/**\r\n * 判断是否包含 class\r\n * @param {Element} el\r\n * @param {String} cls 类名\r\n */\r\nfunction hasClass(el, cls) {\r\n  return el.className.match(new RegExp(`(\\\\s|^)${cls}(\\\\s|$)`));\r\n}\r\n\r\n/**\r\n * 添加 class\r\n * @param {Element} el\r\n * @param {String} cls 类名\r\n */\r\nfunction addClass(el, cls) {\r\n  if (!hasClass(el, cls)) {\r\n    el.classList ? el.classList.add(cls) : el.className += ` ${cls}`;\r\n  }\r\n}\r\n\r\n/**\r\n * 移除 class\r\n * @param {Element} el\r\n * @param {String} cls 类名\r\n */\r\nfunction removeClass(el, cls) {\r\n  if (hasClass(el, cls)) {\r\n    const reg = new RegExp(`(\\\\s|^)${cls}(\\\\s|$)`);\r\n    el.classList ? el.classList.remove(cls) : el.className = el.className.replace(reg, ' ');\r\n  }\r\n}\r\n\r\nexport {\r\n  getValue,\r\n  extend,\r\n  initField,\r\n  parseToDate,\r\n  isBrowser,\r\n  getCurrentEvent,\r\n  isRadioOrCheckbox,\r\n  isSelect,\r\n  isSameNameField,\r\n  getElementsByName,\r\n  attributeValue,\r\n  addClass,\r\n  removeClass,\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util.js\n **/","import {\r\n  extend,\r\n  initField,\r\n  isBrowser,\r\n  getCurrentEvent,\r\n  isSelect,\r\n  isSameNameField,\r\n  getElementsByName,\r\n  attributeValue,\r\n} from './util';\r\nimport testHook from './testHook';\r\n\r\n/**\r\n * 核心验证组件，不包括事件及 dom 操作\r\n */\r\nexport default class Validate {\r\n\r\n  constructor(options) {\r\n    // 绑定验证方法\r\n    for (const key in testHook) {\r\n      this[key] = testHook[key];\r\n    }\r\n\r\n    // 无参数\r\n    if (!options) {\r\n      return this;\r\n    }\r\n\r\n    this._default = {\r\n      // css 类前缀\r\n      prefix: 'valid',\r\n      // 错误信息节点\r\n      errorEl: 'em',\r\n      // 表单触发事件级别\r\n      eventLevel: 'all',\r\n    };\r\n\r\n    // 替换默认参数\r\n    this.opts = extend(this._default, options);\r\n    this.form = {};\r\n    this.bodyData = options.bodyData;\r\n    this.errors = {};\r\n    this.fields = {};\r\n    this.handles = {};\r\n\r\n    // 构建具有所有需要验证的信息域\r\n    this.addFields(this.opts.fields);\r\n\r\n    // 有 form 表单的验证\r\n    if (isBrowser() && this.opts.formName) {\r\n      // 获取表单对象\r\n      this.form = document.forms[this.opts.formName];\r\n\r\n      // HTML5 添加 novalidate\r\n      this.form.setAttribute('novalidate', 'novalidate');\r\n\r\n      // 绑定用户输入事件\r\n      this.onInputEvent && this.onInputEvent(null, 'all');\r\n\r\n      // 绑定提交事件\r\n      this._onSubmit();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 验证整体表单域\r\n   * @param  {Event} evt 当前事件\r\n   * @return {Boolean} 是否成功\r\n   */\r\n  validate(evt) {\r\n    this.handles.evt = getCurrentEvent(evt);\r\n    let isSuccess = true;\r\n    const fields = this.fields;\r\n\r\n    for (const name in fields) {\r\n      // 通过 name 验证\r\n      if (!this.validateByName(name)) {\r\n        isSuccess = false;\r\n      }\r\n    }\r\n\r\n    // 如果有错误，停止 submit 提交，并停止执行回调函数\r\n    if (!isSuccess) {\r\n      this.preventSubmit();\r\n    } else {\r\n      // 将 null 暴露到 callback 函数中\r\n      this.errors = null;\r\n    }\r\n\r\n    // 执行回调函数\r\n    if (typeof this.opts.callback === 'function') {\r\n      this.opts.callback(this.errors, this.handles.evt);\r\n    }\r\n\r\n    return isSuccess;\r\n  }\r\n\r\n  /**\r\n   * 验证单个表单域\r\n   * @param {String} name 属性\r\n   * @return {Boolean} 是否成功\r\n   */\r\n  validateByName(name) {\r\n    const field = this.fields[name];\r\n    let isSuccess = false;\r\n\r\n    // 单个验证没找到规则\r\n    if (!field) {\r\n      return isSuccess;\r\n    }\r\n\r\n    // 获取验证的 DOM 节点数组\r\n    const el = this._getArrayByName(field.name);\r\n\r\n    // 表单 name 属性相同且不是 radio、checkbox、select 的表单域\r\n    if (isSameNameField(el)) {\r\n      // 默认通过验证，若有一个错误，则不通过\r\n      let isMultiSuccess = true;\r\n      for (let i = 0, elLength = el.length; i < elLength; i++) {\r\n        // 当前验证的 field 对象\r\n        // 默认设置 el 为数组对象\r\n        field.el = [el[i]];\r\n        // 若有一个错误，则不通过\r\n        if (!this._validateField(field)) {\r\n          isMultiSuccess = false;\r\n        }\r\n      }\r\n      isSuccess = isMultiSuccess;\r\n    } else {\r\n      // 正常验证\r\n      field.el = el;\r\n      isSuccess = this._validateField(field);\r\n    }\r\n\r\n    return isSuccess;\r\n  }\r\n\r\n  /**\r\n   * 阻止表单提交\r\n   */\r\n  preventSubmit() {\r\n    const evt = this.handles.evt;\r\n\r\n    if (evt && evt.preventDefault) {\r\n      evt.preventDefault();\r\n    } else if (evt) {\r\n      // IE 使用的全局变量\r\n      evt.returnValue = false;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 扩展校验方法\r\n   * @param {String} name 校验名称\r\n   * @param {Function} method 校验方法\r\n   */\r\n  addMethod(name, method) {\r\n    if (typeof method === 'function') {\r\n      // 绑定验证方法\r\n      testHook[name] = method;\r\n\r\n      // 绑定至对象\r\n      this[name] = method;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 动态添加 fields 方法\r\n   * @param {Object} fields 对象\r\n   */\r\n  addFields(fields) {\r\n    if (typeof fields === 'object') {\r\n      // 构建具有所有需要验证的信息域\r\n      for (const name in fields) {\r\n        let field = fields[name];\r\n\r\n        // 规则正确，则进行\r\n        if (field.rules) {\r\n          // 初始化 其他属性\r\n          field.name = name;\r\n          field = initField(field);\r\n\r\n          // 构建单个需要验证的信息域\r\n          this.fields[name] = field;\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 动态移除 fields 方法\r\n   * @param {Array} fieldNames 名称\r\n   */\r\n  removeFields(fieldNames) {\r\n    if (fieldNames instanceof Array) {\r\n      for (let i = 0, namesLength = fieldNames.length; i < namesLength; i++) {\r\n        // 移除对象\r\n        this.fields && delete this.fields[fieldNames[i]];\r\n        this.errors && delete this.errors[fieldNames[i]];\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 绑定 submit 按钮提交事件\r\n   */\r\n  _onSubmit() {\r\n    const thatOnSubmit = this.form.onsubmit;\r\n    this.form.onsubmit = (function (that) {\r\n      return function (e) {\r\n        try {\r\n          const evt = getCurrentEvent(e);\r\n          return that.validate(evt) && (thatOnSubmit === undefined || thatOnSubmit());\r\n        } catch (ex) {\r\n          return null;\r\n        }\r\n      };\r\n    }(this));\r\n  }\r\n\r\n  /**\r\n   * 验证当前节点\r\n   * @param  {Object} field 验证信息域\r\n   * @return {Boolean} 是否成功\r\n   */\r\n  _validateField(field) {\r\n    let thatField = field;\r\n    // 成功标识\r\n    let isSuccess = true;\r\n    // 错误对象\r\n    this.errors = this.errors || {};\r\n\r\n    // 更新验证域\r\n    thatField = this._updateField(thatField);\r\n\r\n    const isRequired = thatField.rules.indexOf('required') !== -1;\r\n    const isEmpty = thatField.value === undefined || thatField.value === '' || thatField.value === null;\r\n\r\n    const rules = thatField.rules.split(/\\s*\\|\\s*/g);\r\n\r\n    for (let i = 0, ruleLength = rules.length; i < ruleLength; i++) {\r\n      // 逐条验证，如果已经验证失败，则暂时不需要进入当前条目再次验证\r\n      if (!isSuccess) {\r\n        break;\r\n      }\r\n\r\n      // 转换：max_length(12) => ['max_length', 12]\r\n      let method = rules[i];\r\n      const parts = /^(.+?)\\((.+)\\)$/.exec(method);\r\n      let param = '';\r\n\r\n      // 解析带参数的验证如 max_length(12)\r\n      if (parts) {\r\n        method = parts[1];\r\n        param = parts[2];\r\n      }\r\n\r\n      // 如果不是 required 这个字段，该值是空的，则不验证，继续下一个规则。\r\n      if (!isRequired && isEmpty) {\r\n        continue;\r\n      }\r\n\r\n      // 匹配验证\r\n      if (typeof testHook[method] === 'function') {\r\n        if (!testHook[method].apply(this, [thatField, param])) {\r\n          isSuccess = false;\r\n        }\r\n      }\r\n\r\n      // 错误信息域\r\n      this.errors[thatField.name] = {\r\n        el: thatField.el,\r\n        id: thatField.id,\r\n        name: thatField.name,\r\n        rule: method,\r\n      };\r\n\r\n      // 解析错误信息\r\n      if (!isSuccess) {\r\n        // 错误提示\r\n        this.errors[thatField.name].message = (function message() {\r\n          const seqText = thatField.messages ? thatField.messages.split(/\\s*\\|\\s*/g)[i] : '';\r\n\r\n          // 替换 {{value}} 和 {{param}} 为指定值\r\n          return seqText ? seqText.replace(/\\{\\{\\s*value\\s*}}/g, thatField.value).replace(/\\{\\{\\s*param\\s*}}/g, param) : seqText;\r\n        }());\r\n      }\r\n    }\r\n\r\n    // 钩子：验证单个之后\r\n    this.afterFieldValidate && this.afterFieldValidate(isSuccess, this.errors[thatField.name]);\r\n\r\n    // 验证成功后，删除之前验证过的信息\r\n    if (isSuccess) {\r\n      delete this.errors[thatField.name];\r\n    }\r\n\r\n    return isSuccess;\r\n  }\r\n\r\n  /**\r\n   * 更新单个验证域\r\n   * field.el 统一为 Array 对象\r\n   * @param {Object} field 验证域\r\n   * @return {Object} field\r\n   */\r\n  _updateField(field) {\r\n    let thatField = field;\r\n    // 数据验证模式\r\n    if (this.bodyData) {\r\n      thatField.value = this.bodyData[thatField.name];\r\n      return thatField;\r\n    }\r\n\r\n    // 设置验证信息域属性\r\n    const el = thatField.el;\r\n    if (el) {\r\n      thatField.id = el[0].id;\r\n      thatField.type = el[0].type;\r\n      thatField.value = attributeValue(el, 'value');\r\n      thatField.checked = attributeValue(el, 'checked');\r\n    } else {\r\n      // 动态删除表单域之后清空对象值\r\n      thatField = initField(field);\r\n    }\r\n    return thatField;\r\n  }\r\n\r\n  /**\r\n   * 获取 nodeList 转换为 Array 统一验证，并避免 IE 序列化崩溃 BUG\r\n   * @param {String} name 节点\r\n   */\r\n  _getArrayByName(name) {\r\n    // 仅浏览器环境\r\n    if (isBrowser()) {\r\n      let elObj;\r\n\r\n      // 若有 form 存在定位更精确\r\n      if (this.opts.formName) {\r\n        elObj = this.form[name];\r\n      } else {\r\n        elObj = getElementsByName(name);\r\n      }\r\n\r\n      // 如果节点对象不存在或长度为零\r\n      if (!elObj || elObj.length === 0) {\r\n        return null;\r\n      }\r\n\r\n      // 将节点转换为数组\r\n      const arr = [];\r\n      const elLength = elObj.length;\r\n\r\n      // 排除 select， select 为数组形式\r\n      if (elLength && !isSelect(elObj)) {\r\n        for (let i = 0; i < elLength; i++) {\r\n          arr.push(elObj[i]);\r\n        }\r\n      } else {\r\n        arr.push(elObj);\r\n      }\r\n      return arr;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Validate.js\n **/","import regex from './regex';\r\nimport {\r\n  getValue,\r\n  parseToDate,\r\n  isRadioOrCheckbox,\r\n} from './util';\r\n\r\n/**\r\n * 验证方法类\r\n */\r\nconst testHook = {\r\n\r\n  // 验证自然数\r\n  isNumeric(field) {\r\n    return regex.numeric.test(getValue(field));\r\n  },\r\n\r\n  // 验证整数\r\n  isInteger(field) {\r\n    return regex.integer.test(getValue(field));\r\n  },\r\n\r\n  // 验证浮点数\r\n  isDecimal(field) {\r\n    return regex.decimal.test(getValue(field));\r\n  },\r\n\r\n  // 验证邮箱\r\n  isEmail(field) {\r\n    return regex.email.test(getValue(field));\r\n  },\r\n\r\n  // 验证 IP 地址\r\n  isIp(field) {\r\n    return regex.ip.test(getValue(field));\r\n  },\r\n\r\n  // 验证座机\r\n  isTel(field) {\r\n    return regex.tel.test(getValue(field));\r\n  },\r\n\r\n  // 验证手机\r\n  isPhone(field) {\r\n    return regex.phone.test(getValue(field));\r\n  },\r\n\r\n  // 验证字母数字下划线\r\n  isAbc(field) {\r\n    return regex.abc.test(getValue(field));\r\n  },\r\n\r\n  // 验证URL\r\n  isUrl(field) {\r\n    return regex.url.test(getValue(field));\r\n  },\r\n\r\n  // 验证日期\r\n  isDate(field) {\r\n    // 解析日期\r\n    let thatDate = getValue(field);\r\n    if (regex.date.test(thatDate)) {\r\n      thatDate = thatDate.split('-');\r\n      const year = parseInt(thatDate[0], 10);\r\n      const month = parseInt(thatDate[1], 10);\r\n      const day = parseInt(thatDate[2], 10);\r\n\r\n      if (year < 1 || year > 9999 || month < 1 || month > 12) {\r\n        return false;\r\n      }\r\n\r\n      const numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n      // 闰年2月29号\r\n      if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0)) {\r\n        numDays[1] = 29;\r\n      }\r\n\r\n      // 检查日期\r\n      return !(day < 1 || day > numDays[month - 1]);\r\n    }\r\n    return false;\r\n  },\r\n\r\n  // 是否为必填\r\n  required(field) {\r\n    if (isRadioOrCheckbox(field)) {\r\n      return (field.checked === true);\r\n    }\r\n    return (getValue(field) !== null && getValue(field) !== '');\r\n  },\r\n\r\n  // 多于 某个数\r\n  greaterThan(field, param) {\r\n    const value = getValue(field);\r\n    if (!regex.decimal.test(value)) {\r\n      return false;\r\n    }\r\n    return (parseFloat(value) > parseFloat(param));\r\n  },\r\n\r\n  // 少于 某个数\r\n  lessThan(field, param) {\r\n    const value = getValue(field);\r\n    if (!regex.decimal.test(value)) {\r\n      return false;\r\n    }\r\n    return (parseFloat(value) < parseFloat(param));\r\n  },\r\n\r\n  // 最大长度\r\n  maxLength(field, length) {\r\n    if (!regex.integer.test(length)) {\r\n      return false;\r\n    }\r\n    return (getValue(field).length <= parseInt(length, 10));\r\n  },\r\n\r\n  // 最小长度\r\n  minLength(field, length) {\r\n    if (!regex.integer.test(length)) {\r\n      return false;\r\n    }\r\n    return (getValue(field).length >= parseInt(length, 10));\r\n  },\r\n\r\n  // 大于某个日期\r\n  greaterThanDate(field, date) {\r\n    const currentDate = parseToDate(getValue(field));\r\n    const paramDate = parseToDate(date);\r\n\r\n    if (!paramDate || !currentDate) {\r\n      return false;\r\n    }\r\n    return currentDate > paramDate;\r\n  },\r\n\r\n  // 小于某个日期\r\n  lessThanDate(field, date) {\r\n    const currentDate = parseToDate(getValue(field));\r\n    const paramDate = parseToDate(date);\r\n\r\n    if (!paramDate || !currentDate) {\r\n      return false;\r\n    }\r\n    return currentDate < paramDate;\r\n  },\r\n\r\n};\r\n\r\nexport default testHook;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/testHook.js\n **/","/**\r\n * 正则表达式\r\n */\r\nconst regex = {\r\n\r\n  // 自然数\r\n  numeric: /^\\d+$/,\r\n\r\n  // 整数\r\n  integer: /^-?\\d+$/,\r\n\r\n  // 浮点数\r\n  decimal: /^-?\\d*\\.?\\d+$/,\r\n\r\n  // 邮箱\r\n  email: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n\r\n  // IP 地址 [ip ipv4、ipv6]\r\n  ip: /^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])((\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])){3}|(\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])){5})$/,\r\n\r\n  // 电话号码\r\n  tel: /^(([0+]\\d{2,3}-)?(0\\d{2,3})-)(\\d{7,8})(-(\\d{3,}))?$/,\r\n\r\n  // 手机号码\r\n  phone: /^1[3-9]\\d{9}$/,\r\n\r\n  // 字母数字或下划线\r\n  abc: /^\\w+$/,\r\n\r\n  // URL\r\n  url: /[a-zA-Z]+:\\/\\/[^\\s]*/,\r\n\r\n  // 日期\r\n  date: /^\\d{4}-\\d{1,2}-\\d{1,2}$/,\r\n};\r\n\r\nexport default regex;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/regex.js\n **/"],"sourceRoot":""}